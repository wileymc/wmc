---
const currentPath = Astro.url.pathname;
const isHomePage = currentPath === "/";
import { MdOutlineKeyboardBackspace } from "react-icons/md";

---

<style>
    /* Hide the css-doodle by default */
    css-doodle {
      visibility: hidden;
      opacity: 0;
      transition: opacity 0.3s ease-in-out;
    }
    
    /* Show it when the doodle is loaded */
    body.doodle-loaded css-doodle {
      visibility: visible;
      opacity: 1;
    }
    
  </style>

<script>
    const loadDoodleScript = () => {
      if (!document.querySelector('script[src="https://cdnjs.cloudflare.com/ajax/libs/css-doodle/0.37.2/css-doodle.min.js"]')) {
        // Create the script element
        const doodleScript = document.createElement('script');
        doodleScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/css-doodle/0.37.2/css-doodle.min.js';
        
        // When the script is loaded
        doodleScript.onload = () => {
          // Add the class to show all doodles
          document.body.classList.add('doodle-loaded');
        };
        
        // Append the script to the head
        document.head.appendChild(doodleScript);
      } else {
        // If the script already exists, ensure the class is added
        document.body.classList.add('doodle-loaded');
      }
    };

    const initializeDoodle = () => {
      loadDoodleScript();

      // Observe DOM changes to re-run the script if necessary
      const observer = new MutationObserver(() => {
        if (!document.body.classList.contains('doodle-loaded')) {
          loadDoodleScript();
        }
      });

      observer.observe(document.body, { childList: true, subtree: true });
    };

    // Ensure the script is loaded on mount
    initializeDoodle();
  </script>

<nav class="flex items-center justify-between pb-8 tracking-tight">
    <div>
        {
            isHomePage ? (
            <>
              <css-doodle>
                {`
                :doodle {
                  @grid: 8 / 25px;
                  @shape: circle;
                  --s: 0;
                }
            
                :doodle(:hover) {
                  --s: 1.5;
                }
            
                transition: .3s @r(.6s);
                border-radius: @pick(25% 0, 0 100%);
                transform: scale(@r(.1, 1.25));
                transform: translateY(calc(var(--s) * 100%));
            
                background: var(--color-primary);
                opacity: @r.8;
                `}
              </css-doodle>
            </>
            ) : (
                <a
                    href="/"
                    target="_self"
                    class="hover:text-primary underline-offset-4 transition duration-150 ease-in-out hover:underline">
                    <MdOutlineKeyboardBackspace className="-mt-0.5 inline-block" />
                    <span>wmc</span>
                </a>
            )
        }
    </div>
    <div class="flex items-center gap-4 transition duration-150 ease-in-out">
        <a
            href="/music"
            target="_self"
            class="hover:text-primary   underline-offset-4 transition duration-150 ease-in-out hover:underline">
            music
        </a>
        <a
            href="/books"
            target="_self"
            class="hover:text-primary   underline-offset-4 transition duration-150 ease-in-out hover:underline">
            books
        </a>
        <a
            href="/notes"
            target="_self"
            class="hover:text-primary underline-offset-4 transition duration-150 ease-in-out hover:underline">
            notes
        </a>

    </div>
</nav>


